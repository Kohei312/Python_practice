## 8クイーン問題
## 8*8 の盤面に、チェスのクイーンを8体配置する
## ルール : 前後斜めに移動できるクイーンのルートと重ならないように、各自配置すること

maze = [
    [9,9,9,9,9,9,9,9,9,9,9,9],
    [9,0,0,0,9,0,0,0,0,0,0,9],
    [9,0,9,0,0,0,9,9,0,9,9,9],
    [9,0,9,9,0,9,0,0,0,9,0,9],
    [9,0,0,0,9,0,0,9,9,0,9,9],
    [9,9,9,0,0,9,0,9,0,0,0,9],
    [9,0,0,0,9,0,9,0,0,9,1,9],
    [9,0,9,0,0,0,0,9,0,0,9,9],
    [9,0,0,9,0,9,0,0,9,0,0,9],
    [9,9,9,9,9,9,9,9,9,9,9,9],
]

N = 8 ## 配置したいQueenの総数

def check(x, col):## 斜め線上にあるか確かめる

    # 配置済みの行を逆順に調べる
    for i, row in enumerate(reversed(col)): # インデックス, 要素を、逆順で取得する
        if ( x + i + 1 == row ) or ( x - i - 1 == row ): ## 斜めラインをチェック. 左上 or 左下にあるか.
            return False
    return True

def search(col):
    if len(col) == N: ## すべて配置できれば出力
        print(col)
        return

    for i in range(N): # 0 から 8 までを探索.(配置するQueenの数だけ検索)
        if i not in col: ## 同じ行内でないことを確認
            if check(i,col): 
                col.append(i)
                search(col) ## 再帰処理
                col.pop() ## 再帰処理後は、別パターンの検索のため、代入した値を削除する
search([])